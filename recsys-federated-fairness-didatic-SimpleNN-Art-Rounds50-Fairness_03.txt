---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
NR_ADVANTAGED_GROUP = 5     # número de avaliações geradas para os clientes do grupo dos favorecidos
NR_DISADVANTAGED_GROUP = 1  # número de avaliações geradas para os clientes do grupo dos desfavorecidos
---------------------------------------------------------------------------------------------------------
ROUNDS: 5 | Melhores hiperparâmetros: {'learning_rate': 0.034, 'epochs': 100}
No treinamento local: gerando avaliações para os grupos recebidos por parâmetro
indices_novas_avaliacoes = indices_nao_avaliados[torch.randperm(len(indices_nao_avaliados))[:NR_ADVANTAGED_GROUP if i in G[1] else NR_DISADVANTAGED_GROUP]]




---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
NR_ADVANTAGED_GROUP = 5     # número de avaliações geradas para os clientes do grupo dos favorecidos
NR_DISADVANTAGED_GROUP = 1  # número de avaliações geradas para os clientes do grupo dos desfavorecidos
---------------------------------------------------------------------------------------------------------
ROUNDS: 5 | Melhores hiperparâmetros: {'learning_rate': 0.034, 'epochs': 100}
No treinamento local: gerando avaliações para os grupos [0, ..., 14] e [15, ..., 299]
indices_novas_avaliacoes = indices_nao_avaliados[torch.randperm(len(indices_nao_avaliados))[:NR_ADVANTAGED_GROUP if i < NUMBER_ADVANTAGED_GROUP else NR_DISADVANTAGED_GROUP]]